{"version":3,"file":"web-mito-sdk.modern.mjs","sources":["../src/index.js","../src/module/watchJsError.js","../src/module/watchApiError.js"],"sourcesContent":["import { watchApiError } from \"./module/watchApiError.js\";\nimport { watchJsError } from \"./module/watchJsError.js\";\nimport { watchResourceError } from \"./module/watchResourceError.js\";\n\nexport class webMitoSdkInit {\n  constructor({ name, type, config, sendApi, sendResource, sendJsError }) {\n    this.name = name;\n    this.type = type;\n    this.config = config;\n    this.sendApi = sendApi;\n    this.sendJsError = sendJsError;\n    this.sendResource = sendResource;\n  }\n  init() {\n    this.sendApi && watchApiError(this.name);\n    this.sendJsError && watchJsError(this.name, this.type,this.config);\n    // this.sendResource && watchResourceError(this.name);\n  }\n}\n","export function watchJsError(name, type, config) {\n  window.addEventListener(\n    \"error\",\n    (event) => {\n      if (event.target.localName) {\n        console.log(\"这是资源错误\", event);\n      } else {\n        console.log(\"这是代码错误\", event);\n      }\n    },\n    true\n  );\n  \n  window.addEventListener(\"unhandledrejection\", (event) => {\n    console.log(\"这是Promise场景中错误\", event);\n  });\n\n  if (type == \"VUE\") {\n    config.errorHandler = function (err, vm, info) {\n      console.log(`Error: ${err.toString()}\\nInfo: ${info}`, \"vue内部错误\");\n    };\n  }\n}\n","export function watchApiError(name) {\n  function hijackXHR() {\n    let xhr = window.XMLHttpRequest;\n    const proto = window.XMLHttpRequest.prototype;\n    const originalOpen = proto.open;\n    const originalSend = proto.send;\n    if (xhr._myxhr_flag === true) {\n      return;\n    }\n    xhr._myxhr_flag = true;\n    proto.open = function (method, url) {\n      this._ctx = {\n        url: url || \"\",\n        method,\n      };\n      originalOpen.apply(this, arguments);\n    };\n\n    proto.send = function (body) {\n      const that = this;\n      const ctx = that._ctx;\n      function handler() {\n        if (ctx && that.readyState === 4) {\n          try {\n            const url = that.responseURL || ctx.url;\n            // 剔除 SDK 发出的上报请求\n            if (url.indexOf(SERVER_HOST) >= 0) {\n              return;\n            }\n            // 上报 API 请求\n            console.log({\n              url,\n              httpMethod: ctx.method,\n              httpCode: that.status,\n            });\n          } catch (err) {\n            console.log(err);\n            // sender.reportError(err);\n          }\n        }\n      }\n    };\n  }\n  window.XMLHttpRequest && hijackXHR();\n}\n"],"names":["webMitoSdkInit","constructor","name","type","config","sendApi","sendResource","sendJsError","this","init","window","XMLHttpRequest","xhr","proto","prototype","originalOpen","open","_myxhr_flag","method","url","_ctx","apply","arguments","send","body","hijackXHR","addEventListener","event","target","localName","console","log","errorHandler","err","vm","info","toString"],"mappings":"AAIaA,MAAAA,EACXC,aAAYC,KAAEA,EAAIC,KAAEA,EAAIC,OAAEA,EAAMC,QAAEA,EAAOC,aAAEA,EAAYC,YAAEA,IACvDC,KAAKN,KAAOA,EACZM,KAAKL,KAAOA,EACZK,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKD,YAAcA,EACnBC,KAAKF,aAAeA,CACtB,CACAG,OCbK,IAA4BN,EAAMC,EDcrCI,KAAKH,SE6BPK,OAAOC,gBA1CP,WACE,IAAOC,EAAGF,OAAOC,eACjB,MAAME,EAAQH,OAAOC,eAAeG,UAC9BC,EAAeF,EAAMG,MAEH,IAApBJ,EAAIK,cAGRL,EAAIK,aAAc,EAClBJ,EAAMG,KAAO,SAAUE,EAAQC,GAC7BX,KAAKY,KAAO,CACVD,IAAKA,GAAO,GACZD,UAEFH,EAAaM,MAAMb,KAAMc,UAC3B,EAEAT,EAAMU,KAAO,SAAUC,GAuBvB,EACF,CACyBC,GF5BvBjB,KAAKD,cCf0BJ,EDeaK,KAAKL,KCfZC,EDeiBI,KAAKJ,OCd7DM,OAAOgB,iBACL,QACCC,IACKA,EAAMC,OAAOC,UACfC,QAAQC,IAAI,SAAUJ,GAEtBG,QAAQC,IAAI,SAAUJ,EACxB,GAEF,GAGFjB,OAAOgB,iBAAiB,qBAAuBC,IAC7CG,QAAQC,IAAI,iBAAkBJ,EAChC,GAEY,OAARxB,IACFC,EAAO4B,aAAe,SAAUC,EAAKC,EAAIC,GACvCL,QAAQC,IAAK,UAASE,EAAIG,qBAAqBD,IAAQ,UACzD,GDHF"}