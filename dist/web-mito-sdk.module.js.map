{"version":3,"file":"web-mito-sdk.module.js","sources":["../src/index.js","../src/module/watchApiError.js","../src/module/watchJsError.js"],"sourcesContent":["import { watchApiError } from \"./module/watchApiError.js\";\nimport { watchJsError } from \"./module/watchJsError.js\";\nimport { watchResourceError } from \"./module/watchResourceError.js\";\n\nexport class webMitoSdkInit {\n  constructor({ name, type, config, sendApi, sendResource, sendJsError }) {\n    this.name = name;\n    this.type = type;\n    this.config = config;\n    this.sendApi = sendApi;\n    this.sendJsError = sendJsError;\n    this.sendResource = sendResource;\n  }\n  init() {\n    this.sendApi && watchApiError(this.name);\n    this.sendJsError && watchJsError(this.name, this.type,this.config);\n    // this.sendResource && watchResourceError(this.name);\n  }\n}\n","export function watchApiError(name) {\n  function hijackXHR() {\n    const proto = window.XMLHttpRequest.prototype;\n    const originalOpen = proto.open;\n    const originalSend = proto.send;\n\n    proto.open = function (method, url, async) {\n        this._ctx = {\n          url: url || \"\",\n          method,\n        };\n        console.log(ctx,'open');\n      return originalOpen.apply(this, arguments);\n    };\n\n    proto.send = function (body) {\n        console.log(body,'send');\n      //   function handler() {\n      //     if (ctx && that.readyState === 4) {\n      //       try {\n      //         const url = that.responseURL || ctx.url;\n      //         // 上报 API 请求\n      //         console.log({\n      //           url,\n      //           httpMethod: ctx.method,\n      //           httpCode: that.status,\n      //         });\n      //       } catch (err) {\n      //         console.log(err);\n      //         // sender.reportError(err);\n      //       }\n      //     }\n      //   }\n      return originalSend.apply(this, arguments);\n    };\n  }\n  window.XMLHttpRequest && hijackXHR();\n}\n","export function watchJsError(name, type, config) {\n  window.addEventListener(\n    \"error\",\n    (event) => {\n      if (event.target.localName) {\n        console.log(\"这是资源错误\", event);\n      } else {\n        console.log(\"这是代码错误\", event);\n      }\n    },\n    true\n  );\n  \n  window.addEventListener(\"unhandledrejection\", (event) => {\n    console.log(\"这是Promise场景中错误\", event);\n  });\n\n  if (type == \"VUE\") {\n    config.errorHandler = function (err, vm, info) {\n      console.log(`Error: ${err.toString()}\\nInfo: ${info}`, \"vue内部错误\");\n    };\n  }\n}\n"],"names":["webMitoSdkInit","_ref","type","config","sendApi","sendResource","sendJsError","this","name","init","proto","originalOpen","window","XMLHttpRequest","prototype","open","send","method","url","async","_ctx","console","log","ctx","apply","arguments","body","originalSend","addEventListener","event","target","localName","errorHandler","err","vm","info","toString"],"mappings":"AAIaA,IAAcA,eAAA,WACzB,SAAwEA,EAAAC,GAAA,IAApDC,EAAID,EAAJC,KAAMC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,QAASC,EAAYJ,EAAZI,aAAcC,EAAWL,EAAXK,YACvDC,KAAKC,KADWP,EAAJO,KAEZD,KAAKL,KAAOA,EACZK,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKD,YAAcA,EACnBC,KAAKF,aAAeA,CACtB,CAKC,OAJDI,EAAAA,UAAAA,KAAA,WCbK,IAEGC,EACAC,ICHyBT,EAAMC,EFcrCI,KAAKH,SCsBPQ,OAAOC,iBAlCCH,EAAQE,OAAOC,eAAeC,UAC9BH,EAAeD,EAAMK,OACNL,EAAMM,KAE3BN,EAAMK,KAAO,SAAUE,EAAQC,EAAKC,GAMlC,OALEZ,KAAKa,KAAO,CACVF,IAAKA,GAAO,GACZD,OAAAA,GAEFI,QAAQC,IAAIC,IAAI,UACEC,MAAMjB,KAAMkB,UAClC,EAEAf,EAAMM,KAAO,SAAUU,GAkBrB,OAjBEL,QAAQC,IAAII,EAAK,QAiBAC,EAACH,MAAMjB,KAAMkB,UAClC,GDnBAlB,KAAKD,cEf0BJ,EFeaK,KAAKL,KEfZC,EFeiBI,KAAKJ,OEd7DS,OAAOgB,iBACL,QACA,SAACC,GACKA,EAAMC,OAAOC,UACfV,QAAQC,IAAI,SAAUO,GAEtBR,QAAQC,IAAI,SAAUO,EAE1B,GACA,GAGFjB,OAAOgB,iBAAiB,qBAAsB,SAACC,GAC7CR,QAAQC,IAAI,iBAAkBO,EAChC,GAEY,OAAR3B,IACFC,EAAO6B,aAAe,SAAUC,EAAKC,EAAIC,GACvCd,QAAQC,IAAcW,UAAAA,EAAIG,WAAU,WAAWD,EAAQ,UACzD,GFHF,EAACnC,CAAA,CAbwB"}