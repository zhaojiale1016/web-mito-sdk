{"version":3,"file":"web-mito-sdk.modern.mjs","sources":["../src/index.js","../src/module/watchJsError.js","../src/module/watchApiError.js"],"sourcesContent":["import { watchApiError } from \"./module/watchApiError.js\";\nimport { watchJsError } from \"./module/watchJsError.js\";\nimport { watchResourceError } from \"./module/watchResourceError.js\";\n\nexport class webMitoSdkInit {\n  constructor({ name, type, config, sendApi, sendResource, sendJsError }) {\n    this.name = name;\n    this.type = type;\n    this.config = config;\n    this.sendApi = sendApi;\n    this.sendJsError = sendJsError;\n    this.sendResource = sendResource;\n  }\n  init() {\n    this.sendApi && watchApiError(this.name);\n    this.sendJsError && watchJsError(this.name, this.type,this.config);\n    // this.sendResource && watchResourceError(this.name);\n  }\n}\n","export function watchJsError(name, type, config) {\n  window.addEventListener(\n    \"error\",\n    (event) => {\n      if (event.target.localName) {\n        console.log(\"这是资源错误\", event);\n      } else {\n        console.log(\"这是代码错误\", event);\n      }\n    },\n    true\n  );\n  \n  window.addEventListener(\"unhandledrejection\", (event) => {\n    console.log(\"这是Promise场景中错误\", event);\n  });\n\n  if (type == \"VUE\") {\n    config.errorHandler = function (err, vm, info) {\n      console.log(`Error: ${err.toString()}\\nInfo: ${info}`, \"vue内部错误\");\n    };\n  }\n}\n","export function watchApiError(name) {\n  function hijackXHR() {\n    const proto = window.XMLHttpRequest.prototype;\n    const originalOpen = proto.open;\n    const originalSend = proto.send;\n\n    proto.open = function (method, url, async) {\n        this._ctx = {\n          url: url || \"\",\n          method,\n        };\n        console.log(ctx,'open');\n      return originalOpen.apply(this, arguments);\n    };\n\n    proto.send = function (body) {\n        console.log(body,'send');\n      //   function handler() {\n      //     if (ctx && that.readyState === 4) {\n      //       try {\n      //         const url = that.responseURL || ctx.url;\n      //         // 上报 API 请求\n      //         console.log({\n      //           url,\n      //           httpMethod: ctx.method,\n      //           httpCode: that.status,\n      //         });\n      //       } catch (err) {\n      //         console.log(err);\n      //         // sender.reportError(err);\n      //       }\n      //     }\n      //   }\n      return originalSend.apply(this, arguments);\n    };\n  }\n  window.XMLHttpRequest && hijackXHR();\n}\n"],"names":["webMitoSdkInit","constructor","name","type","config","sendApi","sendResource","sendJsError","this","init","window","XMLHttpRequest","proto","prototype","originalOpen","open","send","method","url","async","_ctx","console","log","ctx","apply","arguments","body","originalSend","hijackXHR","addEventListener","event","target","localName","errorHandler","err","vm","info","toString"],"mappings":"AAIaA,MAAAA,EACXC,aAAYC,KAAEA,EAAIC,KAAEA,EAAIC,OAAEA,EAAMC,QAAEA,EAAOC,aAAEA,EAAYC,YAAEA,IACvDC,KAAKN,KAAOA,EACZM,KAAKL,KAAOA,EACZK,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKD,YAAcA,EACnBC,KAAKF,aAAeA,CACtB,CACAG,OCbK,IAA4BN,EAAMC,EDcrCI,KAAKH,SEsBPK,OAAOC,gBAnCP,WACE,MAAMC,EAAQF,OAAOC,eAAeE,UAC9BC,EAAeF,EAAMG,OACNH,EAAMI,KAE3BJ,EAAMG,KAAO,SAAUE,EAAQC,EAAKC,GAMlC,OALEX,KAAKY,KAAO,CACVF,IAAKA,GAAO,GACZD,UAEFI,QAAQC,IAAIC,IAAI,QACXT,EAAaU,MAAMhB,KAAMiB,UAClC,EAEAb,EAAMI,KAAO,SAAUU,GAkBrB,OAjBEL,QAAQC,IAAII,EAAK,QAiBAC,EAACH,MAAMhB,KAAMiB,UAClC,CACF,CACyBG,GFrBvBpB,KAAKD,cCf0BJ,EDeaK,KAAKL,KCfZC,EDeiBI,KAAKJ,OCd7DM,OAAOmB,iBACL,QACCC,IACKA,EAAMC,OAAOC,UACfX,QAAQC,IAAI,SAAUQ,GAEtBT,QAAQC,IAAI,SAAUQ,EACxB,GAEF,GAGFpB,OAAOmB,iBAAiB,qBAAuBC,IAC7CT,QAAQC,IAAI,iBAAkBQ,EAChC,GAEY,OAAR3B,IACFC,EAAO6B,aAAe,SAAUC,EAAKC,EAAIC,GACvCf,QAAQC,IAAK,UAASY,EAAIG,qBAAqBD,IAAQ,UACzD,GDHF"}